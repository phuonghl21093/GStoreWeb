<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="By" xml:space="preserve">
    <value>by</value>
  </data>
  <data name="CommentsAboutUs" xml:space="preserve">
    <value>Comments about us</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact Us</value>
  </data>
  <data name="ContactNow" xml:space="preserve">
    <value>Contact us immediately</value>
  </data>
  <data name="Detail" xml:space="preserve">
    <value>Detail</value>
  </data>
  <data name="Document" xml:space="preserve">
    <value>Materials</value>
  </data>
  <data name="EmailAdress" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="FeaturedDocuments" xml:space="preserve">
    <value>Featured documents</value>
  </data>
  <data name="FeaturedVideos" xml:space="preserve">
    <value>Featured videos</value>
  </data>
  <data name="FeatureImages" xml:space="preserve">
    <value>Feature images</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>from</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="HomeContactContent" xml:space="preserve">
    <value>We provide engineers and builders best to implement your dreams come true.</value>
  </data>
  <data name="HomeContactTitle" xml:space="preserve">
    <value>You need experts to project and build your dream home?</value>
  </data>
  <data name="HomeTitle" xml:space="preserve">
    <value>Tổng Công ty Thái Sơn - Bộ Quốc Phòng</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LastestNews" xml:space="preserve">
    <value>Lastest news</value>
  </data>
  <data name="MessageContent" xml:space="preserve">
    <value>Message content</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="OtherProjects" xml:space="preserve">
    <value>Other Projects</value>
  </data>
  <data name="ProjectInfo" xml:space="preserve">
    <value>Project information</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search...</value>
  </data>
  <data name="SendMail" xml:space="preserve">
    <value>Send Email</value>
  </data>
  <data name="SendMailToUs" xml:space="preserve">
    <value>Send mail to us</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="ViewDetail" xml:space="preserve">
    <value>View detail</value>
  </data>
  <data name="DocumentLibrary" xml:space="preserve">
    <value>Document library</value>
  </data>
  <data name="Library" xml:space="preserve">
    <value>Library</value>
  </data>
  <data name="PictureLibrary" xml:space="preserve">
    <value>Image gallery</value>
  </data>
  <data name="VideoLibrary" xml:space="preserve">
    <value>Video library</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="SearchResultsFor" xml:space="preserve">
    <value>Search Results for</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="SearchText" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchResultNotFound" xml:space="preserve">
    <value>Sorry, nothing matched your search criteria. Please try using more general terms to get more results.</value>
  </data>
  <data name="ProjectDetail" xml:space="preserve">
    <value>Project detail</value>
  </data>
  <data name="OurService" xml:space="preserve">
    <value>OUR SERVICES</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>Sorry! We could not find the page you were looking for. Try searching for it</value>
  </data>
  <data name="AchievementHighlight" xml:space="preserve">
    <value>Highlight Events</value>
  </data>
  <data name="AllAchievementHighlight" xml:space="preserve">
    <value>All highlight events</value>
  </data>
  <data name="ContacInfo" xml:space="preserve">
    <value>Contact Info</value>
  </data>
  <data name="NewsAndEvents" xml:space="preserve">
    <value>News &amp; Events</value>
  </data>
  <data name="Partners" xml:space="preserve">
    <value>Partners</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="ProjectBDS" xml:space="preserve">
    <value>Real estate</value>
  </data>
  <data name="ProjectCTDD" xml:space="preserve">
    <value>Civil works</value>
  </data>
  <data name="ProjectGT" xml:space="preserve">
    <value>Traffic</value>
  </data>
  <data name="ProjectKHAC" xml:space="preserve">
    <value>Another</value>
  </data>
  <data name="ProjectPTKCN" xml:space="preserve">
    <value>Industrial zone development</value>
  </data>
  <data name="ProjectTMDV" xml:space="preserve">
    <value>Trade &amp; Services</value>
  </data>
  <data name="ViewAllProject" xml:space="preserve">
    <value>All project</value>
  </data>
  <data name="CompanyBusiness" xml:space="preserve">
    <value>Company Business</value>
  </data>
  <data name="OtherNews" xml:space="preserve">
    <value>Other news</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full name</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email required</value>
  </data>
  <data name="EmailValidate" xml:space="preserve">
    <value>Incorrect email validate</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Projects" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="EnterSearchKeyword" xml:space="preserve">
    <value>Enter the keyword ...</value>
  </data>
  <data name="SearchLabel" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="ViewAll" xml:space="preserve">
    <value>View all</value>
  </data>
</root>